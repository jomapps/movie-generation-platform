[tool:pytest]
# Pytest configuration for movie generation platform integration tests

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    brain_service: tests that require brain service
    character_service: tests that require character service
    story_service: tests that require story service
    orchestrator: tests that require orchestrator service
    celery_redis: tests that require celery/redis service
    performance: performance tests (may take longer)
    integration: integration tests
    e2e: end-to-end tests
    slow: slow running tests
    fast: fast running tests

# Async configuration
asyncio_mode = auto

# Output configuration
addopts =
    -v
    --tb=short
    --strict-markers
    --strict-config
    --durations=10
    --color=yes

# Test timeout
timeout = 300

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:websockets.*
    ignore::UserWarning:httpx.*

# Minimum version
minversion = 7.0